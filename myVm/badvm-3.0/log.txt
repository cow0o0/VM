****************
Platform: MIPS-32 (Little-endian)
Code: 0x19 0x00 0xc0 0xa3 0x1a 0x00 0xc0 0xa3 0x1a 0x00 0xc0 0xa3 0x14 0x00 0x00 0x10 0x00 0x00 0x00 0x00 0x1a 0x00 0xc2 0x93 0x30 0x00 0xc3 0x27 0x21 0x10 0x62 0x00 0xf4 0xff 0x43 0x80 0x1a 0x00 0xc2 0x93 0x31 0x00 0x42 0x24 0xff 0x00 0x42 0x30 0x00 0x16 0x02 0x00 0x03 0x16 0x02 0x00 0x26 0x10 0x62 0x00 0x00 0x16 0x02 0x00 0x03 0x16 0x02 0x00 0xff 0x00 0x43 0x30 0x19 0x00 0xc2 0x93 0x21 0x10 0x62 0x00 0x19 0x00 0xc2 0xa3 0x1a 0x00 0xc2 0x93 0x01 0x00 0x42 0x24 0x1a 0x00 0xc2 0xa3 0x1a 0x00 0xc2 0x93 0x06 0x00 0x42 0x2c 0xea 0xff 0x40 0x14 0x00 0x00 0x00 0x00
Disasm:
[*]---- Start disassemble ----
0x400ea0:	sb	$zero, 0x19($fp)
0x400ea4:	sb	$zero, 0x1a($fp)
0x400ea8:	sb	$zero, 0x1a($fp)
0x400eac:	b	0x400f00
0x400eb0:	nop	
0x400eb4:	lbu	$v0, 0x1a($fp)
0x400eb8:	addiu	$v1, $fp, 0x30
0x400ebc:	addu	$v0, $v1, $v0
0x400ec0:	lb	$v1, -0xc($v0)
0x400ec4:	lbu	$v0, 0x1a($fp)
0x400ec8:	addiu	$v0, $v0, 0x31
0x400ecc:	andi	$v0, $v0, 0xff
0x400ed0:	sll	$v0, $v0, 0x18
0x400ed4:	sra	$v0, $v0, 0x18
0x400ed8:	xor	$v0, $v1, $v0
0x400edc:	sll	$v0, $v0, 0x18
0x400ee0:	sra	$v0, $v0, 0x18
0x400ee4:	andi	$v1, $v0, 0xff
0x400ee8:	lbu	$v0, 0x19($fp)
0x400eec:	addu	$v0, $v1, $v0
0x400ef0:	sb	$v0, 0x19($fp)
0x400ef4:	lbu	$v0, 0x1a($fp)
0x400ef8:	addiu	$v0, $v0, 1
0x400efc:	sb	$v0, 0x1a($fp)
0x400f00:	lbu	$v0, 0x1a($fp)
0x400f04:	sltiu	$v0, $v0, 6
0x400f08:	bnez	$v0, 0x400eb4
0x400f0c:	nop	
[*]---- Finish disassemble ----
[*]---- Start vmCode ----
	MovImm2Reg,0x19,0x00,0x00,0x00,RFPO,
	MovReg2Mem,ZERO,RFP,
	MovImm2Reg,0x1a,0x00,0x00,0x00,RFPO,
	MovReg2Mem,ZERO,RFP,
	MovImm2Reg,0x1a,0x00,0x00,0x00,RFPO,
	MovReg2Mem,ZERO,RFP,
	Jmp,0xab,0x00,0x00,0x00,
	Nop,
	MovImm2Reg,0x1a,0x00,0x00,0x00,RFPO,
	MovMem2Reg,RFP,RAX,
	AddReg4Imm2Reg,RFP,0x30,0x00,0x00,0x00,RBX,
	AddReg4Reg2Reg,RBX,RAX,RAX,
	MovImm2Reg,0xf4,0xff,0xff,0xff,RFPO,
	MovMem2Reg,RAX,RBX,
	MovImm2Reg,0x1a,0x00,0x00,0x00,RFPO,
	MovMem2Reg,RFP,RAX,
	AddReg4Imm2Reg,RAX,0x31,0x00,0x00,0x00,RAX,
	AndReg4Imm2Reg,RAX,0xff,0x00,0x00,0x00,RAX,
	SllReg4Imm2Reg,RAX,0x18,0x00,0x00,0x00,RAX,
	SraReg4Imm2Reg,RAX,0x18,0x00,0x00,0x00,RAX,
	XorReg4Reg2Reg,RBX,RAX,RAX,
	SllReg4Imm2Reg,RAX,0x18,0x00,0x00,0x00,RAX,
	SraReg4Imm2Reg,RAX,0x18,0x00,0x00,0x00,RAX,
	AndReg4Imm2Reg,RAX,0xff,0x00,0x00,0x00,RBX,
	MovImm2Reg,0x19,0x00,0x00,0x00,RFPO,
	MovMem2Reg,RFP,RAX,
	AddReg4Reg2Reg,RBX,RAX,RAX,
	MovImm2Reg,0x19,0x00,0x00,0x00,RFPO,
	MovReg2Mem,RAX,RFP,
	MovImm2Reg,0x1a,0x00,0x00,0x00,RFPO,
	MovMem2Reg,RFP,RAX,
	AddReg4Imm2Reg,RAX,0x01,0x00,0x00,0x00,RAX,
	MovImm2Reg,0x1a,0x00,0x00,0x00,RFPO,
	MovReg2Mem,RAX,RFP,
	MovImm2Reg,0x1a,0x00,0x00,0x00,RFPO,
	MovMem2Reg,RFP,RAX,
	SetLessThanImm,RAX,0x06,0x00,0x00,0x00,RAX,
	BranchNotEquelZero,RAX,0x21,0x00,0x00,0x00,
	Nop,
	Ret,
[*]---- Finish vmCode ----
[*]---- Start SecCode ----
		PushImm,0x19,0x00,0x00,0x00,
		PopReg,RFPO,
	MovReg2Mem,ZERO,RFP,
		PushImm,0x1a,0x00,0x00,0x00,
		PopReg,RFPO,
	MovReg2Mem,ZERO,RFP,
	MovImm2Reg,0x1a,0x00,0x00,0x00,RFPO,
		PushReg,ZERO,
		PopMem,RFP,
		Jmp,0xbf,0x00,0x00,0x00,
		Nop,
	MovImm2Reg,0x1a,0x00,0x00,0x00,RFPO,
	MovMem2Reg,RFP,RAX,
		PushReg,RFP,
		PushImm,0x30,0x00,0x00,0x00,
		AtomAdd,
		PopReg,RBX,
	AddReg4Reg2Reg,RBX,RAX,RAX,
	MovImm2Reg,0xf4,0xff,0xff,0xff,RFPO,
		PushMem,RAX,
		PopReg,RBX,
		PushImm,0x1a,0x00,0x00,0x00,
		PopReg,RFPO,
		PushMem,RFP,
		PopReg,RAX,
	AddReg4Imm2Reg,RAX,0x31,0x00,0x00,0x00,RAX,
	AndReg4Imm2Reg,RAX,0xff,0x00,0x00,0x00,RAX,
	SllReg4Imm2Reg,RAX,0x18,0x00,0x00,0x00,RAX,
		PushReg,RAX,
		PushImm,0x18,0x00,0x00,0x00,
		AtomSra,
		PopReg,RAX,
		PushReg,RBX,
		PushReg,RAX,
		AtomXor,
		PopReg,RAX,
	SllReg4Imm2Reg,RAX,0x18,0x00,0x00,0x00,RAX,
		PushReg,RAX,
		PushImm,0x18,0x00,0x00,0x00,
		AtomSra,
		PopReg,RAX,
	AndReg4Imm2Reg,RAX,0xff,0x00,0x00,0x00,RBX,
	MovImm2Reg,0x19,0x00,0x00,0x00,RFPO,
	MovMem2Reg,RFP,RAX,
	AddReg4Reg2Reg,RBX,RAX,RAX,
	MovImm2Reg,0x19,0x00,0x00,0x00,RFPO,
		PushReg,RAX,
		PopMem,RFP,
	MovImm2Reg,0x1a,0x00,0x00,0x00,RFPO,
	MovMem2Reg,RFP,RAX,
	AddReg4Imm2Reg,RAX,0x01,0x00,0x00,0x00,RAX,
	MovImm2Reg,0x1a,0x00,0x00,0x00,RFPO,
		PushReg,RAX,
		PopMem,RFP,
		PushImm,0x1a,0x00,0x00,0x00,
		PopReg,RFPO,
	MovMem2Reg,RFP,RAX,
		SetLessThanImm,RAX,0x06,0x00,0x00,0x00,RAX,
		BranchNotEquelZero,RAX,0x24,0x00,0x00,0x00,
		Nop,
		Ret,
[*]---- Finish SecCode ----
